#ifndef __IMAGE__
#define __IMAGE__


const uint16_t FLUP_RIGHT_DATA[] = 
{
	8,      // frame width
	8,      // frame height
	1,      // number of frames
	0,      // animation speed
	0x0000, // transparent color
	0,      // RGB565 color mode
	// frame 1/1
	0x0000, 0x5260, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x5260, 0x0000, 
	0x5260, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0x5260, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xffff, 0xffff, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xffff, 0x3d56, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0x5260, 0xeec0, 0xff8a, 0xff8a, 0xd1c0, 0xd1c0, 0xeec0, 0x5260, 
	0x0000, 0x5260, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x5260, 0x0000
};
const uint16_t FLUP_LEFT_DATA[] = 
{
	8,      // frame width
	8,      // frame height
	1,      // number of frames
	1,      // animation speed
	0x0000, // transparent color
	0,      // RGB565 color mode
	// frame 1/1
	0x0000, 0x5260, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x5260, 0x0000, 
	0x5260, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0x5260, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xffff, 0xffff, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0x3d56, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0x5260, 0xeec0, 0xd1c0, 0xd1c0, 0xff8a, 0xff8a, 0xeec0, 0x5260, 
	0x0000, 0x5260, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x5260, 0x0000
};


const uint16_t FLUP_RIGHT_ROLL_DATA[] = 
{
	8,      // frame width
	8,      // frame height
	8,      // number of frames
	1,     // animation speed
	0x0000, // transparent color
	0,      // RGB565 color mode
	// frame 1/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xffff, 0xffff, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xffff, 0x3d56, 0xeec0, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 2/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 3/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0xffff, 0x3d56, 0xffff, 0x3d56, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 4/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 5/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0xeec0, 0xffff, 0xffff, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0x3d56, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 6/8
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0x0000, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0x0000, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 7/8
	0x0000, 0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xffff, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 
	// frame 8/8
	0x0000, 0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000, 0x0000, 
	0x0000, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0x0000, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0xffff, 0xffff, 0xffff, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xffff, 0x3d56, 0xffff, 0x3d56, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 
	0xeec0, 0xeec0, 0xff8a, 0xff8a, 0xff8a, 0xff8a, 0xeec0, 0xeec0, 
	0x0000, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0xeec0, 0x0000
};

Image IMG_FLUP_RIGHT = Image(FLUP_RIGHT_DATA);
Image IMG_FLUP_LEFT = Image(FLUP_LEFT_DATA);
Image IMG_FLUP_RIGHT_ROLL = Image(FLUP_RIGHT_ROLL_DATA);

#endif
